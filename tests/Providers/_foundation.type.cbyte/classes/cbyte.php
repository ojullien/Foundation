<?php
// 'Exception'=> 0:none, 1:PHPUnit_Framework_Error_Warning, 2:PHPUnit_Framework_Error_Notice, 3:\Exception
$this->_aTests[self::KEY_RESULT] = array(
//array( 'label'=>'TEST: 10g'         , 'test' => '10g' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '10g' ),
                       '__toString' => array( 'exception'=>0, 'return' => '10g' ),
                        'getLength' => array( 'exception'=>0, 'return' => 3 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => TRUE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10240,
                                                                             'shorthanded' => '10240M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10737418240,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10485760,
                                                                             'shorthanded' => '10485760K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10,
                                                                             'shorthanded' => '10G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 10G'         , 'test' => '10G' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '10G' ),
                       '__toString' => array( 'exception'=>0, 'return' => '10G' ),
                        'getLength' => array( 'exception'=>0, 'return' => 3 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => TRUE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10240,
                                                                             'shorthanded' => '10240M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10737418240,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10485760,
                                                                             'shorthanded' => '10485760K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10,
                                                                             'shorthanded' => '10G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 10m',         'test' => '10m' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '10m' ),
                       '__toString' => array( 'exception'=>0, 'return' => '10m' ),
                        'getLength' => array( 'exception'=>0, 'return' => 3 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => TRUE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10,
                                                                             'shorthanded' => '10M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10485760,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10240,
                                                                             'shorthanded' => '10240K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 0.009765625,
                                                                             'shorthanded' => '0G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 10M',         'test' => '10M' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '10M' ),
                       '__toString' => array( 'exception'=>0, 'return' => '10M' ),
                        'getLength' => array( 'exception'=>0, 'return' => 3 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => TRUE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10,
                                                                             'shorthanded' => '10M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10485760,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10240,
                                                                             'shorthanded' => '10240K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 0.009765625,
                                                                             'shorthanded' => '0G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 0.10m'       , 'test' => '0.10m' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '0.10m' ),
                       '__toString' => array( 'exception'=>0, 'return' => '0.10m' ),
                        'getLength' => array( 'exception'=>0, 'return' => 5 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => TRUE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 0.10,
                                                                             'shorthanded' => '0M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 104857.6,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 102.4,
                                                                             'shorthanded' => '102K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 9.765625e-05,
                                                                             'shorthanded' => '0G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 0.10M'       , 'test' => '0.10M' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '0.10M' ),
                       '__toString' => array( 'exception'=>0, 'return' => '0.10M' ),
                        'getLength' => array( 'exception'=>0, 'return' => 5 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => TRUE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 0.10,
                                                                             'shorthanded' => '0M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 104857.6,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 102.4,
                                                                             'shorthanded' => '102K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 9.765625e-05,
                                                                             'shorthanded' => '0G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 10240k'      , 'test' => '10240k' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '10240k' ),
                       '__toString' => array( 'exception'=>0, 'return' => '10240k' ),
                        'getLength' => array( 'exception'=>0, 'return' => 6 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => TRUE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10,
                                                                             'shorthanded' => '10M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10485760,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10240,
                                                                             'shorthanded' => '10240K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 0.009765625,
                                                                             'shorthanded' => '0G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 10240K'      , 'test' => '10240K' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '10240K' ),
                       '__toString' => array( 'exception'=>0, 'return' => '10240K' ),
                        'getLength' => array( 'exception'=>0, 'return' => 6 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => TRUE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10,
                                                                             'shorthanded' => '10M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10485760,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10240,
                                                                             'shorthanded' => '10240K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 0.009765625,
                                                                             'shorthanded' => '0G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 10485760'    , 'test' => 10485760 ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => 10485760 ),
                       '__toString' => array( 'exception'=>0, 'return' => '10485760' ),
                        'getLength' => array( 'exception'=>0, 'return' => 8 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => FALSE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10,
                                                                             'shorthanded' => '10M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10485760,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10240,
                                                                             'shorthanded' => '10240K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 0.009765625,
                                                                             'shorthanded' => '0G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: "10485760"'  , 'test' => '10485760' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => 10485760 ),
                       '__toString' => array( 'exception'=>0, 'return' => '10485760' ),
                        'getLength' => array( 'exception'=>0, 'return' => 8 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => FALSE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10,
                                                                             'shorthanded' => '10M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10485760,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10240,
                                                                             'shorthanded' => '10240K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 0.009765625,
                                                                             'shorthanded' => '0G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 256mm',        'test' => '256mm' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => FALSE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: m256m',        'test' => 'm256m' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => FALSE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: m256',         'test' => 'm256' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => FALSE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 2m56m',        'test' => '2m56m' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => FALSE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: _1g',          'test' => ' 1g' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '1g' ),
                       '__toString' => array( 'exception'=>0, 'return' => '1g' ),
                        'getLength' => array( 'exception'=>0, 'return' => 2 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => TRUE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 1024,
                                                                             'shorthanded' => '1024M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 1073741824,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 1048576,
                                                                             'shorthanded' => '1048576K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 1,
                                                                             'shorthanded' => '1G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 1g_',          'test' => '1g ' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '1g' ),
                       '__toString' => array( 'exception'=>0, 'return' => '1g' ),
                        'getLength' => array( 'exception'=>0, 'return' => 2 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => TRUE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 1024,
                                                                             'shorthanded' => '1024M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 1073741824,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 1048576,
                                                                             'shorthanded' => '1048576K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 1,
                                                                             'shorthanded' => '1G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 1_g',          'test' => '1 g' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => FALSE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: g',            'test' => 'g' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => FALSE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => NULL,
                                                                             'shorthanded' => NULL) ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 1',            'test' => '1' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => 1 ),
                       '__toString' => array( 'exception'=>0, 'return' => '1' ),
                        'getLength' => array( 'exception'=>0, 'return' => 1 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => FALSE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 0.0000009536,
                                                                             'shorthanded' => '0M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 1,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 0.0009765625,
                                                                             'shorthanded' => '0K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 9.31322574615479e-10,
                                                                             'shorthanded' => '0G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 0.009765625g', 'test' => '0.009765625g' ),
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '0.009765625g' ),
                       '__toString' => array( 'exception'=>0, 'return' => '0.009765625g' ),
                        'getLength' => array( 'exception'=>0, 'return' => 12 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => TRUE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10.0,
                                                                             'shorthanded' => '10M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10485760.0,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10240.0,
                                                                             'shorthanded' => '10240K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 0.009765625,
                                                                             'shorthanded' => '0G') ),
                         'exception'=> 0 )),
//array( 'label'=>'TEST: 0.009765625G', 'test' => '0.009765625G' )
array( 'expected'=>array( 'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '0.009765625G' ),
                       '__toString' => array( 'exception'=>0, 'return' => '0.009765625G' ),
                        'getLength' => array( 'exception'=>0, 'return' => 12 ),
                    'isShorthanded' => array( 'exception'=>0, 'return' => TRUE ),
                   'convertToMByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10.0,
                                                                             'shorthanded' => '10M') ),
                    'convertToByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10485760.0,
                                                                             'shorthanded' => NULL) ),
                   'convertToKByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 10240.0,
                                                                             'shorthanded' => '10240K') ),
                   'convertToGByte' => array( 'exception'=>0, 'return' => array( 'numeric' => 0.009765625,
                                                                             'shorthanded' => '0G') ),
                         'exception'=> 0 )),
);