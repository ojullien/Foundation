<?php
// 'Exception'=> 0:none, 1:PHPUnit_Framework_Error_Warning, 2:PHPUnit_Framework_Error_Notice, 3:\Exception
$this->_aTests[self::KEY_RESULT] = array(
//array( 'label'=>'TEST: /'                        , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . '/' ),
array( 'expected'=>array(  'exception' => 0,
                          'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => $sBuffer10031 ),
                       '__toString' => array( 'exception'=>0, 'return' => $sBuffer10031 ),
                        'getLength' => array( 'exception'=>0, 'return' => mb_strlen( $sBuffer10031 , 'UTF-8') ),
                      'getBasename' => array( 'exception'=>0, 'return' => 'uploads' ),
                      'getRealPath' => array( 'exception'=>0, 'return' => $sBuffer10031 ),
                        )),
//array( 'label'=>'TEST: \\'                       , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . '\\' ),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => $sBuffer10031 ),
                       '__toString' => array( 'exception'=>0, 'return' => $sBuffer10031 ),
                        'getLength' => array( 'exception'=>0, 'return' => mb_strlen( $sBuffer10031 , 'UTF-8') ),
                      'getBasename' => array( 'exception'=>0, 'return' => 'uploads' ),
                      'getRealPath' => array( 'exception'=>0, 'return' => $sBuffer10031 ),
                        )),
//array( 'label'=>'TEST: :'                        , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . ':' ),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
//array( 'label'=>'TEST: *'                        , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . '*' ),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
//array( 'label'=>'TEST: ?'                        , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . '?' ),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
//array( 'label'=>'TEST: "'                        , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . '"' ),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
//array( 'label'=>'TEST: <'                        , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . '<' ),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
//array( 'label'=>'TEST: >'                        , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . '>' ),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
//array( 'label'=>'TEST: |'                        , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . '|' ),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
//array( 'label'=>'TEST: ""'                       , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . '' ),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => FALSE ),
                         'getValue' => array( 'exception'=>0, 'return' => NULL ),
                       '__toString' => array( 'exception'=>0, 'return' => '' ),
                        'getLength' => array( 'exception'=>0, 'return' => 0 ),
                      'getBasename' => array( 'exception'=>0, 'return' => NULL ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => $sBuffer10031 ),
                       '__toString' => array( 'exception'=>0, 'return' => $sBuffer10031 ),
                        'getLength' => array( 'exception'=>0, 'return' => mb_strlen( $sBuffer10031 , 'UTF-8') ),
                      'getBasename' => array( 'exception'=>0, 'return' => 'uploads' ),
                      'getRealPath' => array( 'exception'=>0, 'return' => $sBuffer10031 ),
                        )),
//array( 'label'=>'TEST: "123-a_B.c"'              , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . '123-a_B.c' ),
array( 'expected'=>array(  'exception' => 0,
                             'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                            'getValue' => array( 'exception'=>0, 'return' => '123-a_B.c' ),
                          '__toString' => array( 'exception'=>0, 'return' => '123-a_B.c' ),
                           'getLength' => array( 'exception'=>0, 'return' => mb_strlen( '123-a_B.c' , 'UTF-8') ),
                         'getBasename' => array( 'exception'=>0, 'return' => '123-a_B.c' ),
                         'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => $sBuffer10031 . DIRECTORY_SEPARATOR
                                                                                        . '123-a_B.c' ),
                       '__toString' => array( 'exception'=>0, 'return' => $sBuffer10031 . DIRECTORY_SEPARATOR
                                                                                        . '123-a_B.c' ),
                        'getLength' => array( 'exception'=>0, 'return' => mb_strlen( $sBuffer10031 . DIRECTORY_SEPARATOR
                                                                                             . '123-a_B.c' , 'UTF-8') ),
                      'getBasename' => array( 'exception'=>0, 'return' => '123-a_B.c' ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
//array( 'label'=>'TEST: ../LICENSE'           , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . '..'
//                                                                    . DIRECTORY_SEPARATOR . 'LICENSE' ),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => '..' . DIRECTORY_SEPARATOR . 'LICENSE' ),
                       '__toString' => array( 'exception'=>0, 'return' => '..' . DIRECTORY_SEPARATOR . 'LICENSE' ),
                        'getLength' => array( 'exception'=>0, 'return' => mb_strlen( '..' . DIRECTORY_SEPARATOR
                                                                                           . 'LICENSE' , 'UTF-8') ),
                      'getBasename' => array( 'exception'=>0, 'return' => 'LICENSE' ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => APPLICATION_PATH . DIRECTORY_SEPARATOR
                                                                                       . 'LICENSE' ),
                       '__toString' => array( 'exception'=>0, 'return' => APPLICATION_PATH . DIRECTORY_SEPARATOR
                                                                                       . 'LICENSE' ),
                        'getLength' => array( 'exception'=>0, 'return' => mb_strlen( APPLICATION_PATH . DIRECTORY_SEPARATOR
                                                                                           . 'LICENSE' , 'UTF-8') ),
                      'getBasename' => array( 'exception'=>0, 'return' => 'LICENSE' ),
                      'getRealPath' => array( 'exception'=>0, 'return' => APPLICATION_PATH . DIRECTORY_SEPARATOR
                                                                                       . 'LICENSE' ),
                        )),
//array( 'label'=>'TEST: Iñtërnâtiônàlizætiøn.txt' , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . 'Iñtërnâtiônàlizætiøn.txt' ),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => 'Iñtërnâtiônàlizætiøn.txt' ),
                       '__toString' => array( 'exception'=>0, 'return' => 'Iñtërnâtiônàlizætiøn.txt' ),
                        'getLength' => array( 'exception'=>0, 'return' => mb_strlen( 'Iñtërnâtiônàlizætiøn.txt' , 'UTF-8') ),
                      'getBasename' => array( 'exception'=>0, 'return' => 'Iñtërnâtiônàlizætiøn.txt' ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => $sBuffer10031 . DIRECTORY_SEPARATOR
                                                                                        . 'Iñtërnâtiônàlizætiøn.txt' ),
                       '__toString' => array( 'exception'=>0, 'return' => $sBuffer10031 . DIRECTORY_SEPARATOR
                                                                                        . 'Iñtërnâtiônàlizætiøn.txt' ),
                        'getLength' => array( 'exception'=>0, 'return' => mb_strlen( $sBuffer10031 . DIRECTORY_SEPARATOR
                                                                              . 'Iñtërnâtiônàlizætiøn.txt' , 'UTF-8') ),
                      'getBasename' => array( 'exception'=>0, 'return' => 'Iñtërnâtiônàlizætiøn.txt' ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
//array( 'label'=>'TEST: Iñtërnâtiônàlizætiøn'     , 'test'=>APPLICATION_PATH . '/data/uploads' . DIRECTORY_SEPARATOR . 'Iñtërnâtiônàlizætiøn' )
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => 'Iñtërnâtiônàlizætiøn' ),
                       '__toString' => array( 'exception'=>0, 'return' => 'Iñtërnâtiônàlizætiøn' ),
                        'getLength' => array( 'exception'=>0, 'return' => mb_strlen( 'Iñtërnâtiônàlizætiøn' , 'UTF-8') ),
                      'getBasename' => array( 'exception'=>0, 'return' => 'Iñtërnâtiônàlizætiøn' ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
array( 'expected'=>array(  'exception' => 0,
                           'isvalid' => array( 'exception'=>0, 'return' => TRUE ),
                         'getValue' => array( 'exception'=>0, 'return' => $sBuffer10031 . DIRECTORY_SEPARATOR
                                                                                        . 'Iñtërnâtiônàlizætiøn' ),
                       '__toString' => array( 'exception'=>0, 'return' => $sBuffer10031 . DIRECTORY_SEPARATOR
                                                                                        . 'Iñtërnâtiônàlizætiøn' ),
                        'getLength' => array( 'exception'=>0, 'return' => mb_strlen( $sBuffer10031 . DIRECTORY_SEPARATOR
                                                                                  . 'Iñtërnâtiônàlizætiøn' , 'UTF-8') ),
                      'getBasename' => array( 'exception'=>0, 'return' => 'Iñtërnâtiônàlizætiøn' ),
                      'getRealPath' => array( 'exception'=>0, 'return' => FALSE ),
                        )),
);